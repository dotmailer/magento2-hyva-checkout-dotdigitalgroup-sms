<script>
    /**
     * This function initializes the shipping form validation.
     *
     * @param {HTMLFormElement} form - The form element to be validated.
     * @param {Component} wire - The Livewire component instance.
     * @returns {Object} - Returns an object with the form validation methods and properties.
     */
    function initDotdigitalSmsValidation(form, wire) {

        const collectFormData = (form) => {
            const payload = {}
            for ([key, value] of new FormData(form).entries()) {
                payload[key] = value
            }
            return payload
        }

       return Object.assign({},
            hyva.formValidation(form),
            {
                marketingConsent: false,
                marketingConsentLabel: wire.entangle('marketingConsentLabel'),
                marketingConsentText: wire.entangle('marketingConsentText'),
                marketingConsentPhoneNumber: wire.entangle('marketingConsentPhoneNumber').defer,
            },
            {
                init() {
                    hyvaCheckout.navigation.addTask(() => this.validate())
                    hyvaCheckout.navigation.addTask(() => this.submit())
                },

                async submit() {
                    try {
                        await this.validate()
                    } catch (e) {
                        return false
                    }

                    await wire.save(collectFormData(this.$el))
                    await wire.refresh()
                }
            })
    }
</script>
